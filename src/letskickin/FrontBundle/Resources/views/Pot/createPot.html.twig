{% extends '@Layouts/default.html.twig' %}

{% block body_id %}pot-create{% endblock %}

{% block content %}
    <div>
        {#<ol class="craue_formflow_steplist">
            {% for stepLabel in flow.getStepLabels() %}
                <li{{ block('craue_flow_stepList_class') }}>
                    {%- if flow.isAllowDynamicStepNavigation() and (loop.index != flow.getCurrentStepNumber()) and flow.isStepDone(loop.index) and (not flow.isStepSkipped(loop.index)) -%}
                        <a href="{{ path(app.request.attributes.get('_route'), app.request.query.all
                        | merge(app.request.attributes.get('_route_params'))
                        | craue_addDynamicStepNavigationParameter(flow, loop.index)) }}">
                            {{- block('craue_flow_stepLabel') -}}
                        </a>
                    {%- else -%}
                        {{- block('craue_flow_stepLabel') -}}
                    {%- endif -%}
                </li>
            {% endfor %}
        </ol>#}

        Pasos
    </div>

    {{ form_start(form) }}
        <input type="hidden" name="{{ flow.getFormStepKey() }}" value="{{ flow.getCurrentStepNumber() }}" />

        {{ form_errors(form) }}

        {#{% if flow.getCurrentStepNumber() == 4 %}
            <ul class="participants" data-prototype="{{ form_widget(form.participants.vars.prototype)|e }}"></ul>
        {% endif %}#}

        {{ form_rest(form) }}

        {% set renderBackButton = flow.getCurrentStepNumber() in (flow.getFirstStepNumber() + 1) .. flow.getLastStepNumber() %}
        <div class="pot_form_buttons pot_form_button_count_{% if renderBackButton %}3{% else %}2{% endif %}">
            <button type="submit" class="pot_form_button_last">
                {%- if flow.getCurrentStepNumber() < flow.getLastStepNumber() -%}
                    {{- 'button.next' | trans({}, 'CraueFormFlowBundle') -}}
                {%- else -%}
                    {{- 'button.finish' | trans({}, 'CraueFormFlowBundle') -}}
                {%- endif -%}
            </button>

            {% if renderBackButton %}
                <button type="submit" name="{{ flow.getFormTransitionKey() }}" value="back" formnovalidate="formnovalidate">
                    {{- 'button.back' | trans({}, 'CraueFormFlowBundle') -}}
                </button>
            {% endif %}
        </div>

    {{ form_end(form) }}
{% endblock %}

{#
{% block foot_scripts %}
    {{ parent() }}

    <script>
        // Get the ul that holds the collection of participants
        var collectionHolder = $('.participants');

        // setup an "add a participant" link
        var $addParticipantLink = $('<a href="#" class="add_participant_link">Add a participant</a>');
        var $newLinkLi = $('<li></li>').append($addParticipantLink);

        jQuery(document).ready(function() {
            // add a delete link to all of the existing participant form li elements
            collectionHolder.find('li').each(function() {
                addParticipantFormDeleteLink($(this));
            });

            // add the "add a participant" anchor and li to the participants ul
            collectionHolder.append($newLinkLi);

            // count the current form inputs we have (e.g. 2), use that as the new
            // index when inserting a new item (e.g. 2)
            collectionHolder.data('index', collectionHolder.find(':input').length);

            $addParticipantLink.on('click', function(e) {
                // prevent the link from creating a "#" on the URL
                e.preventDefault();

                // add a new participant form (see next code block)
                addParticipantForm(collectionHolder, $newLinkLi);
            });
        });

        function addParticipantForm(collectionHolder, $newLinkLi) {
            // Get the data-prototype explained earlier
            var prototype = collectionHolder.data('prototype');

            // get the new index
            var index = collectionHolder.data('index');

            // Replace '__name__' in the prototype's HTML to
            // instead be a number based on how many items we have
            var newForm = prototype.replace(/__name__/g, index);

            // increase the index with one for the next item
            collectionHolder.data('index', index + 1);

            // Display the form in the page in an li, before the "Add a participant" link li
            var $newFormLi = $('<li></li>').append(newForm);
            $newLinkLi.before($newFormLi);

            // add a delete link to the new form
            addParticipantFormDeleteLink($newFormLi);
        }

        function addParticipantFormDeleteLink($participantFormLi) {
            var $removeFormA = $('<a href="#">delete this participant</a>');
            $participantFormLi.append($removeFormA);

            $removeFormA.on('click', function(e) {
                // prevent the link from creating a "#" on the URL
                e.preventDefault();

                // remove the li for the participant form
                $participantFormLi.remove();
            });
        }
    </script>
    {{ form_end(form) }}
{% endblock %}
#}
