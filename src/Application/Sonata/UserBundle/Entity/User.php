<?php

namespace Application\Sonata\UserBundle\Entity;

use Sonata\UserBundle\Entity\BaseUser as BaseUser;
use Doctrine\ORM\Mapping as ORM;

/**
 * This file has been generated by the Sonata EasyExtends bundle ( http://sonata-project.org/easy-extends )
 *
 * References :
 *   working with object : http://www.doctrine-project.org/projects/orm/2.0/docs/reference/working-with-objects/en
 *
 * @ORM\Entity
 * @ORM\Table(name="lk_user")
 */
class User extends BaseUser
{

    /**
     * @var integer $id
     *
     * @ORM\Id
     * @ORM\Column(type="integer")
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @ORM\OneToMany(targetEntity="Application\Letskickin\CoreBundle\Entity\Pot", mappedBy="owner", cascade={"persist", "remove"})
     */
    private $pots;

    /**
     * @var boolean
     *
     * @ORM\Column(type="boolean", nullable=true)
     */
    protected $terms;

    /**
     * @var boolean
     *
     * @ORM\Column(type="boolean", nullable=true)
     */
    protected $subscription;

    /**
     * Get id
     *
     * @return integer $id
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set terms
     *
     * @param boolean $terms
     * @return User
     */
    public function setTerms($terms)
    {
        $this->terms = $terms;

        return $this;
    }

    /**
     * Get terms
     *
     * @return boolean
     */
    public function getTerms()
    {
        return $this->terms;
    }

    /**
     * Set subscription
     *
     * @param boolean $subscription
     * @return User
     */
    public function setSubscription($subscription)
    {
        $this->subscription = $subscription;

        return $this;
    }

    /**
     * Get subscription
     *
     * @return boolean
     */
    public function getSubscription()
    {
        return $this->subscription;
    }

    /**
     * Add pots
     *
     * @param \Application\Letskickin\CoreBundle\Entity\Pot $pots
     * @return User
     */
    public function addPot(\Application\Letskickin\CoreBundle\Entity\Pot $pots)
    {
        $this->pots[] = $pots;

        return $this;
    }

    /**
     * Remove pots
     *
     * @param \Application\Letskickin\CoreBundle\Entity\Pot $pots
     */
    public function removePot(\Application\Letskickin\CoreBundle\Entity\Pot $pots)
    {
        $this->pots->removeElement($pots);
    }

    /**
     * Get pots
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getPots()
    {
        return $this->pots;
    }
}